
services:
  postgres:
    image: postgres:16-alpine
    container_name: checkup-postgres
    environment:
      POSTGRES_DB: checkup
      POSTGRES_USER: checkup
      POSTGRES_PASSWORD: checkup
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U checkup"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - checkup-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: checkup-backend
    ports:
      - "3344:3344"
    environment:
      - DATABASE_URL=postgresql://checkup:checkup@postgres:5432/checkup
      - JWT_SECRET=dev-secret-change-in-production
      - CORS_ORIGIN=http://localhost:8080
      - PORT=3344
      # CorpPass MockPass settings (for local dev)
      - CORPPASS_ISSUER=http://mockpass:5156/corppass/v2
      - CORPPASS_AUTHORIZE_URL=http://localhost:5156/corppass/v2/auth
      - CORPPASS_TOKEN_URL=http://mockpass:5156/corppass/v2/token
      - CORPPASS_JWKS_URL=http://mockpass:5156/corppass/v2/.well-known/keys
      - CORPPASS_CLIENT_ID=checkup-app
      - CORPPASS_CLIENT_SECRET=mockpass-secret
      - CORPPASS_CALLBACK_URL=http://localhost:3344/v1/auth/corppass/callback
      - CORPPASS_FRONTEND_CALLBACK_URL=http://localhost:8080/auth/corppass/callback
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - checkup-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3344/v1/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: checkup-frontend
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - checkup-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  mockpass:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: checkup-mockpass
    entrypoint: ["sh"]
    command: ["/app/scripts/start-mockpass.sh"]
    ports:
      - "5156:5156"
    networks:
      - checkup-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5156/corppass/v2/.well-known/keys"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
    driver: local

networks:
  checkup-network:
    driver: bridge
